/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[][] spiralMatrix(int m, int n, ListNode head) {
        int matrix[][] = new int[m][n];
        for(int i=0;i<m;i++){
            matrix[i] = new int[n];
            Arrays.fill(matrix[i],-1);
        }
        int rowStart=0, rowEnd=m-1, colStart=0, colEnd=n-1;

        while(head != null){
            for(int col=colStart;col<=colEnd && head != null;col++){
                matrix[rowStart][col] = head.val;
                head = head.next;
            }
            rowStart++;
            for(int row=rowStart;row<=rowEnd && head != null;row++){
                matrix[row][colEnd] = head.val;
                head = head.next;
            }
            colEnd--;
            for(int col=colEnd;col>=colStart && head != null;col--){
                matrix[rowEnd][col] = head.val;
                head = head.next;
            }
            rowEnd--;
            for(int row=rowEnd;row>=rowStart && head != null;row--){
                matrix[row][colStart] = head.val;
                head = head.next;
            }
            colStart++;
        }

        return matrix;
    }
}
