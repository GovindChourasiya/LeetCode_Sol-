class Solution {
    public void recurrFunc(int[] nums, List<Integer> list, List<List<Integer>> ans, boolean freq[]){
        if(list.size() == nums.length){
            ans.add(new ArrayList<>(list));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(freq[i] != true){
            list.add(nums[i]);
            freq[i] = true;
            recurrFunc(nums,list,ans,freq);
            list.remove(list.size()-1);
            freq[i] = false;
            }
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        boolean arr[] = new boolean[nums.length];
        recurrFunc(nums,list,ans,arr);

        return ans;
    }
}
