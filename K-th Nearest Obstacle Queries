class Solution {
    public int[] resultsArray(int[][] queries, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        List<Integer> list = new ArrayList<>();
        
        for (int[] arr : queries) {
            int dist = Math.abs(arr[0]) + Math.abs(arr[1]);
            pq.offer(dist);

            if (pq.size() < k) {
                list.add(-1);
            } else if (pq.size() == k) {
                list.add(pq.peek());
            } else {
                pq.poll();
                list.add(pq.peek());
            }
        }

        int[] result = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            result[i] = list.get(i);
        }

        return result;
    }
}
