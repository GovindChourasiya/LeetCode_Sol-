class Solution {
    public long countFairPairs(int[] nums, int lower, int upper) {
        int n = nums.length;

        long ans = 0;
        Arrays.sort(nums);

        for(int i=0;i<n;i++){
            int leftIdx = lowerBound(nums,i+1,n,lower-nums[i]);
            int rightIdx = upperBound(nums,i+1,n,upper-nums[i]);

            int x = leftIdx-i-1;
            int y = rightIdx-i-1;

            ans += (y-x);
        }

        return ans;
    }
    public int lowerBound(int[] nums, int left, int right, int target){
        while(left < right){
            int mid = left + (right-left)/2;
            if(nums[mid] < target){
                left = mid+1;
            } else{
                right = mid;
            }
        }

        return left;
    }
    public int upperBound(int[] nums, int left, int right, int target){
        
        while(left < right){
            int mid = left + (right-left)/2;
            if(nums[mid] <= target){
                left = mid+1;
            } else{
                right = mid;
            }
        }
        return left;
    }
}
