
class Solution {
    public int[] frequencySort(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();

        // Count the frequency of each number
        for (int num : nums) {
            map.put(num, map.getOrDefault(num, 0) + 1);
        }

        // Convert int[] to Integer[] for sorting with a custom comparator
        Integer[] numsArray = Arrays.stream(nums).boxed().toArray(Integer[]::new);

        // Sort with custom comparator
        Arrays.sort(numsArray, (a, b) -> {
            int freqA = map.get(a);
            int freqB = map.get(b);

            if (freqA != freqB) {
                return freqA - freqB; // Sort by frequency in ascending order
            }
            return b - a; // Sort by number in descending order when frequencies are the same
        });

        // Convert Integer[] back to int[]
        for (int i = 0; i < nums.length; i++) {
            nums[i] = numsArray[i];
        }

        return nums;
    }
}
