class Solution {
    public void findCombinations(int idx, int[] candidates, int target, List<List<Integer>> ans, List<Integer> curr){
        if(target == 0){
            ans.add(new ArrayList<>(curr));
            return;
        }
        for(int i=idx;i<candidates.length;i++){
            if(i > idx && candidates[i] == candidates[i-1]) continue;
            if(candidates[i] > target) break;

            curr.add(candidates[i]);
            findCombinations(i+1,candidates,target-candidates[i],ans,curr);
            curr.remove(curr.size()-1);
        }
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        
        findCombinations(0,candidates,target,ans,new ArrayList<>());
        return ans;
    }
}
