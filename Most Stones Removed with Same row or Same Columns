class Solution {
    public void dfs(int[][] stones, List<Boolean> list, int idx){
        list.set(idx, true); 
        for(int i = 0; i < stones.length; i++){
            int r = stones[idx][0];
            int c = stones[idx][1];

            if(!list.get(i) && (stones[i][0] == r || stones[i][1] == c)){
                dfs(stones, list, i);
            }
        }
    }

    public int removeStones(int[][] stones) {
        int n = stones.length;
        List<Boolean> list = new ArrayList<>(n);
        for(int i = 0; i < n; i++){
            list.add(false);
        }

        int group = 0;
        for(int i = 0; i < n; i++){
            if(list.get(i)){
                continue;
            }

            dfs(stones, list, i);
            group++;
        }

        return n - group;
    }
}
