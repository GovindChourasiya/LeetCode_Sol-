class Solution {
    public void helper(int idx,int target,int[] candidates, List<List<Integer>> result,List<Integer> com){
        if(target < 0){
            return;
        }
        if(target == 0){
            result.add(new ArrayList<>(com));
            return;
        }

        for(int i=idx;i<candidates.length;i++){
            com.add(candidates[i]);
            helper(i,target-candidates[i],candidates,result,com);
            com.remove(com.size()-1);
        }
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();

        Arrays.sort(candidates);
        helper(0,target,candidates,result,temp);

        return result;
    }
}
