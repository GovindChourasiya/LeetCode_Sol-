class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        int n = nums.length;
        int i = 0, j = 0;
        long sum = 0;
        Set<Integer> st = new HashSet<>();
        long maxi = 0;
        while (j < n) {
            if (!st.contains(nums[j])) {
                sum += nums[j];
                st.add(nums[j]);
            } else {
                while (st.contains(nums[j])) {
                    sum -= nums[i];
                    st.remove(nums[i]);
                    i++;
                }
                sum += nums[j];
                st.add(nums[j]);
            }
            if (j - i + 1 == k) {
                maxi = Math.max(maxi, sum);
                sum -= nums[i];
                st.remove(nums[i]);
                i++;
            }
            j++;
        }
        return maxi;
    }
}
