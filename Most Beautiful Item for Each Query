class Solution {
    public int binarySearch(int[][] items, int price){
        int l = 0;
        int r = items.length-1;
        
        int mid = 0;
        int maxBeauty = 0;
        while(l <= r){
            mid = l + (r-l)/2;
            if(items[mid][0] > price){
                r = mid-1;
            } else{
                maxBeauty = Math.max(maxBeauty,items[mid][1]);
                l = mid+1;
            }
        }

        return maxBeauty;
    }
    public int[] maximumBeauty(int[][] items, int[] queries) {
        int n = items.length;
        int m = queries.length;

        int[] ans = new int[m];

        Arrays.sort(items,(a,b)->Integer.compare(a[0],b[0]));

        int maxi = items[0][1];
        for(int i=1;i<n;i++){
            maxi = Math.max(maxi,items[i][1]);
            items[i][1] = maxi;
        }

        for(int i=0;i<m;i++){
            int queryPrice = queries[i];
            ans[i] = binarySearch(items,queryPrice);
        }

        return ans;
    }
}
