class Solution {
    public int[] missingRolls(int[] rolls, int mean, int n) {
        int m = rolls.length;
        int totalSum = mean * (m + n);
        int sum = 0;
        
        for (int i = 0; i < m; i++) {
            sum += rolls[i];
        }
        
        int missingSum = totalSum - sum;

        if (missingSum < n || missingSum > 6 * n) {
            return new int[0]; 
        }

        // Initialize the result array
        int[] result = new int[n];
        int baseValue = missingSum / n;
        int remainder = missingSum % n;

        // Distribute the base value to all elements
        for (int i = 0; i < n; i++) {
            result[i] = baseValue;
        }

        // Distribute the remainder, adding 1 to the first `remainder` elements
        for (int i = 0; i < remainder; i++) {
            result[i]++;
        }

        return result;
    }
}
