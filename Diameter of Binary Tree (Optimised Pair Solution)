/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Pair{
    int height;
    int diameter;
    public Pair(){
        this.height = 0;
        this.diameter = 0;
    }
}
class Solution {
    public Pair helper(TreeNode root){
        if(root == null){ 
            return new Pair();
        }
        Pair L = helper(root.left);
        Pair R  = helper(root.right);

        Pair P = new Pair();
        P.height = Math.max(L.height,R.height)+1;
        P.diameter = Math.max(L.diameter,Math.max(R.diameter,L.height+R.height));

        return P;
    }
    public int diameterOfBinaryTree(TreeNode root) {
        Pair ans = helper(root);
        return ans.diameter;
    }
}
